// Code generated by MockGen. DO NOT EDIT.
// Source: profile.go

// Package profile_mock is a generated GoMock package.
package profile_mock

import (
	context "context"
	gomock "github.com/golang/mock/gomock"
	model "github.com/iDevoid/stygis/internal/constant/model"
	reflect "reflect"
)

// MockProfilePersistence is a mock of ProfilePersistence interface
type MockProfilePersistence struct {
	ctrl     *gomock.Controller
	recorder *MockProfilePersistenceMockRecorder
}

// MockProfilePersistenceMockRecorder is the mock recorder for MockProfilePersistence
type MockProfilePersistenceMockRecorder struct {
	mock *MockProfilePersistence
}

// NewMockProfilePersistence creates a new mock instance
func NewMockProfilePersistence(ctrl *gomock.Controller) *MockProfilePersistence {
	mock := &MockProfilePersistence{ctrl: ctrl}
	mock.recorder = &MockProfilePersistenceMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use
func (m *MockProfilePersistence) EXPECT() *MockProfilePersistenceMockRecorder {
	return m.recorder
}

// InsertProfile mocks base method
func (m *MockProfilePersistence) InsertProfile(ctx context.Context, user *model.User) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "InsertProfile", ctx, user)
	ret0, _ := ret[0].(error)
	return ret0
}

// InsertProfile indicates an expected call of InsertProfile
func (mr *MockProfilePersistenceMockRecorder) InsertProfile(ctx, user interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "InsertProfile", reflect.TypeOf((*MockProfilePersistence)(nil).InsertProfile), ctx, user)
}
