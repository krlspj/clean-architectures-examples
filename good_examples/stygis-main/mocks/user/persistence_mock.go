// Code generated by MockGen. DO NOT EDIT.
// Source: user.go

// Package user_mock is a generated GoMock package.
package user_mock

import (
	context "context"
	gomock "github.com/golang/mock/gomock"
	model "github.com/iDevoid/stygis/internal/constant/model"
	reflect "reflect"
)

// MockUserPersistence is a mock of UserPersistence interface
type MockUserPersistence struct {
	ctrl     *gomock.Controller
	recorder *MockUserPersistenceMockRecorder
}

// MockUserPersistenceMockRecorder is the mock recorder for MockUserPersistence
type MockUserPersistenceMockRecorder struct {
	mock *MockUserPersistence
}

// NewMockUserPersistence creates a new mock instance
func NewMockUserPersistence(ctrl *gomock.Controller) *MockUserPersistence {
	mock := &MockUserPersistence{ctrl: ctrl}
	mock.recorder = &MockUserPersistenceMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use
func (m *MockUserPersistence) EXPECT() *MockUserPersistenceMockRecorder {
	return m.recorder
}

// InsertUser mocks base method
func (m *MockUserPersistence) InsertUser(ctx context.Context, user *model.User) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "InsertUser", ctx, user)
	ret0, _ := ret[0].(error)
	return ret0
}

// InsertUser indicates an expected call of InsertUser
func (mr *MockUserPersistenceMockRecorder) InsertUser(ctx, user interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "InsertUser", reflect.TypeOf((*MockUserPersistence)(nil).InsertUser), ctx, user)
}
