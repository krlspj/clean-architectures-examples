steps:
- id: common-lint
  name: golang
  entrypoint: ./scripts/lint.sh
  args: ['common', '-install']
- id: trainer-lint
  name: golang
  entrypoint: ./scripts/lint.sh
  args: ['trainer', '-install']
- id: trainings-lint
  name: golang
  entrypoint: ./scripts/lint.sh
  args: ['trainings', '-install']
- id: users-lint
  name: golang
  entrypoint: ./scripts/lint.sh
  args: ['users', '-install']

- id: trainer-docker
  name: gcr.io/cloud-builders/docker
  entrypoint: ./scripts/build-docker.sh
  args: ["trainer", "$PROJECT_ID"]
  waitFor: [trainer-lint]
- id: trainings-docker
  name: gcr.io/cloud-builders/docker
  entrypoint: ./scripts/build-docker.sh
  args: ["trainings", "$PROJECT_ID"]
  waitFor: [trainings-lint]
- id: users-docker
  name: gcr.io/cloud-builders/docker
  entrypoint: ./scripts/build-docker.sh
  args: ["users", "$PROJECT_ID"]
  waitFor: [users-lint]

- id: docker-compose
  name: 'docker/compose:1.19.0'
  args: ['-f', 'docker-compose.yml', '-f', 'docker-compose.ci.yml', 'up', '-d']
  env:
    - 'PROJECT_ID=$PROJECT_ID'
  waitFor: [trainer-docker, trainings-docker, users-docker]

- id: common-tests
  name: golang
  entrypoint: ./scripts/test.sh
  args: ["common", ".test.ci.env"]
  waitFor: [docker-compose]
- id: trainer-tests
  name: golang
  entrypoint: ./scripts/test.sh
  args: ["trainer", ".test.ci.env"]
  waitFor: [docker-compose]
- id: trainings-tests
  name: golang
  entrypoint: ./scripts/test.sh
  args: ["trainings", ".test.ci.env"]
  waitFor: [docker-compose]
- id: users-tests
  name: golang
  entrypoint: ./scripts/test.sh
  args: ["users", ".test.ci.env"]
  waitFor: [docker-compose]
- id: e2e-tests
  name: golang
  entrypoint: ./scripts/test.sh
  args: ["common", ".e2e.ci.env"]
  waitFor: [trainer-tests, trainings-tests, users-tests]

- id: docker-compose-down
  name: 'docker/compose:1.19.0'
  args: ['-f', 'docker-compose.yml', '-f', 'docker-compose.ci.yml', 'down']
  env:
    - 'PROJECT_ID=$PROJECT_ID'
  waitFor: [e2e-tests]

- id: trainer-http-deploy
  name: gcr.io/cloud-builders/gcloud
  entrypoint: ./scripts/deploy.sh
  args: [trainer, http, "$PROJECT_ID"]
  waitFor: [e2e-tests]
- id: trainer-grpc-deploy
  name: gcr.io/cloud-builders/gcloud
  entrypoint: ./scripts/deploy.sh
  args: [trainer, grpc, "$PROJECT_ID"]
  waitFor: [e2e-tests]
- id: trainings-http-deploy
  name: gcr.io/cloud-builders/gcloud
  entrypoint: ./scripts/deploy.sh
  args: [trainings, http, "$PROJECT_ID"]
  waitFor: [e2e-tests]
- id: users-http-deploy
  name: gcr.io/cloud-builders/gcloud
  entrypoint: ./scripts/deploy.sh
  args: [users, http, "$PROJECT_ID"]
  waitFor: [e2e-tests]
- id: users-grpc-deploy
  name: gcr.io/cloud-builders/gcloud
  entrypoint: ./scripts/deploy.sh
  args: [users, grpc, "$PROJECT_ID"]
  waitFor: [e2e-tests]

- id: web-deps
  name: node:12.16.2
  entrypoint: yarn
  args: [install]
  dir: web
  waitFor: ['-']
- id: openapi-js
  name: openapitools/openapi-generator-cli:v4.3.0
  entrypoint: "./scripts/openapi-js.sh"
  waitFor: ['-']
- id: web-build
  name: node:12.16.2
  entrypoint: yarn
  args: [build]
  dir: web
  waitFor: [web-deps, openapi-js]
- name: gcr.io/$PROJECT_ID/firebase
  args: ['deploy', '--project=$PROJECT_ID']
  dir: web
  waitFor: [web-build]

options:
  env:
  - 'GO111MODULE=on'
  machineType: 'N1_HIGHCPU_8'

images:
- 'gcr.io/$PROJECT_ID/trainer'
- 'gcr.io/$PROJECT_ID/trainings'
- 'gcr.io/$PROJECT_ID/users'
